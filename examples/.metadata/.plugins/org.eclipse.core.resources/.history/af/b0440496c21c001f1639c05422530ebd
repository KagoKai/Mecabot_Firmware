/*
 * mainpp.cpp
 *
 *  Created on: May 25, 2024
 *      Author: ADMIN
 */

#include <cstdint>
#include <stdlib.h>
#include "mainpp.h"
#include "mecabot_hardware.h"
#include "mecabot_ros_config.h"

#define MAX(x, y) (((x) > (y)) ? (x) : (y))
#define MIN(x, y) (((x) < (y)) ? (x) : (y))

float constraint(float var, float min, float max)
{
	if (var < min)	return min;
	if (var > max) 	return max;
	else 			return var;
}

uint32_t t = 0; // Elapsed system time

extern Motor mecabot_motor[NUM_OF_MOTOR];
extern Encoder encoder[NUM_OF_MOTOR];
extern FO_IIR_Filter_t filter[NUM_OF_MOTOR];

uint16_t prev_tick[NUM_OF_MOTOR] = { 0 };
float rpm[NUM_OF_MOTOR] = { 0.0f };

void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
	comm_rosserial.set_tx_cplt();
}

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
	comm_rosserial.reset_rbuf();
}

void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
}

/* CALLBACK FUNCTIONS START */
void commandVelocityCallback(const geometry_msgs::Twist& cmd_vel_msg)
{

}
/* CALLBACK FUNCTIONS END */

void ros_setup()
{
	nh.initNode();
}

void setup()
{
	ros_setup();

}

void loop()
{
	t = static_cast<double>(millis());

	/* Motor control */

	nh.spinOnce();
}

/* DATA HANDLE FUNCTIONS START */
